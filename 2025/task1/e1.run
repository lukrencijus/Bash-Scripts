#!/usr/bin/env bash
PATH=.

if [ -z "$1" ]; then
	echo "Usage: $0 <file.csv>"
	exit 1
fi

if [ ! -f "$1" ]; then
    	echo "File not found"
	echo "Usage: $0 <file.csv>"
	exit 1
fi

file="$1"
rows=-1

echo "FILE:"
while IFS= read -r line || [ -n "$line" ]; do
        (( rows++ ))
        echo "$line"
done < "$file"
echo

echo "ROWS:"
echo "Number of rows (excluding the header row): $rows"
echo

rows=-1

echo "COLUMNS:"
while IFS= read -r line || [ -n "$line" ]; do
	(( rows++ ))
	eval "array=($line)"
	current_columns=${#array[@]}

	if [ "$rows" -eq 0 ]; then
		echo "H row columns: $current_columns"
		header_columns="$current_columns"
	else
                echo "------------------------------------------------"
		echo "$rows row columns: $current_columns"

		if [ "$current_columns" -ne "$header_columns" ]; then
			echo "  Warning: different number of columns than header row"
		fi
	fi
done < "$file"

rows=-1
echo
echo "STATISTICS:"
while IFS= read -r line || [ -n "$line" ]; do
    (( rows++ ))
    eval "array=($line)"
    current_columns=${#array[@]}
    
    declare -A word_count=()
    unique_words=()
    unique_count=0
    
    for ((i=0; i<$current_columns; i++)); do
        word="${array[$i]}"
        is_unique=true
        
        for ((j=0; j<i; j++)); do
            prev_word="${array[$j]}"
            if [ "$word" = "$prev_word" ]; then
                is_unique=false
                break
            fi
        done
        
        ((word_count[$word]++))
        
        if [ "$is_unique" = true ]; then
            ((unique_count++))
            unique_words+=("$word")
        fi
    done

    if [ "$rows" -eq 0 ]; then
        echo "H row unique word count: $unique_count"
    else
        echo "$rows row unique word count: $unique_count"
    fi
    
    echo "Unique words and frequencies:"
    for word in "${unique_words[@]}"; do
        echo "  $word: ${word_count[$word]}"
    done
    echo "------------------------------------------------"

done < "$file"