#!/usr/bin/env bash
PATH=.

if [ "$#" -ne 2 ]; then
    echo "Usage:"
    echo "Example 1: $0 <file.json> -k <person.name>"
    echo "Example 2: $0 <file.json> -d <data>"
    echo "Example 3: $0 <file.json> -k <person.name> -d <data>"
    exit 1
fi

if [ ! -f "$1" ]; then
    echo "File not found"
	echo "Usage: $0 <file.json>"
	exit 1
fi

json_file="$1"
path="$2"

IFS='.' read -ra path_parts <<< "$path"

buffer=""
ignore=0
key_found=0
current_path_index=0

while IFS= read -r -n 1 char; do
    buffer+="$char"
    
    current_key="${path_parts[$current_path_index]}"
    
    if [[ "$buffer" =~ \"$current_key\"[[:space:]]*: ]]; then
        key_found=1
        ((current_path_index++))
        
        for ((i = 0; i < ${#buffer}; i++)); do
            substring="${buffer:i}"
            if [[ "$substring" == \"${current_key}\"* ]]; then
                buffer="$substring"
                break
            fi
        done
        
        if [ "$current_path_index" -eq "${#path_parts[@]}" ]; then
            while IFS= read -r -n 1 char_after; do
                buffer+="$char_after"
                
                if [ "$char_after" == '{' ] || [ "$char_after" == '[' ]; then
                    ((ignore++))
                elif [ "$char_after" == '}' ] || [ "$char_after" == ']' ]; then
                    ((ignore--))
                fi
                
                if [ "$ignore" -eq 0 ] && [[ "$char_after" == ',' || "$char_after" == '}' || "$char_after" == ']' ]]; then
                    echo "$buffer"
                    exit 0
                fi
            done
        fi
    fi
done < "$json_file"

if [[ $key_found -eq 0 ]]; then
    echo "Key not found: $path"
    exit 1
fi