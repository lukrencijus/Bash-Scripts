#!/usr/bin/env bash
PATH=.

if [ "$#" -ne 2 ]; then
    echo "Usage:>"
    echo "Example 1: $0 <file.json> -k <person.name>"
    echo "Example 2: $0 <file.json> -d <data>"
    echo "Example 3: $0 <file.json> -k <person.name> -d <data>"
    exit 1
fi

if [ ! -f "$1" ]; then
    echo "File not found"
	echo "Usage: $0 <file.json>"
	exit 1
fi

json_file="$1"
key_path="$2"

# Also we need to account for data

buffer=""
key_found=0
ignore=0

IFS='.' read -r -a keys <<< "$key_path"
for key in "${keys[@]}"; do
    echo "$key"
done

while IFS= read -r -n 1 char; do
    buffer+="$char"

    for key in "${keys[@]}"; do
        if [[ "$buffer" =~ \"$key\"[[:space:]]*: ]]; then
            key_found=1

            for ((i = 0; i < ${#buffer}; i++)); do
                substring="${buffer:i}"
                if [[ "$substring" == \"${key}\"* ]]; then
                    buffer="$substring"
                    break
                fi
            done

                while IFS= read -r -n 1 char_after; do
                buffer+="$char_after"

                if [ "$char_after" == '{' ] || [ "$char_after" == '[' ]; then
                    ((ignore++))
                elif [ "$char_after" == '}' ] || [ "$char_after" == ']' ]; then
                    ((ignore--))
                    if [ "$ignore" -eq 0 ]; then
                        echo "$buffer"
                        exit 0
                    fi
                fi

                if [[ "$char_after" == '}' || "$char_after" == ',' || "$char_after" == ']' ]]; then
                    if [ "$ignore" -eq 0 ]; then
                        echo "$buffer"
                        exit 0
                    fi
                fi
            done
        fi
    done
done < "$json_file"

if [[ $key_found -eq 0 ]]; then
    echo "Key not found: $key_path"
    exit 1
fi